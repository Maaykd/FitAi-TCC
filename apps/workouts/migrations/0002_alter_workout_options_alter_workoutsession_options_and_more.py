# Generated by Django 4.2.7 on 2025-08-22 12:40

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('exercises', '0002_alter_exercise_options_exercise_calories_per_minute_and_more'),
        ('workouts', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='workout',
            options={'ordering': ['difficulty_level', 'name']},
        ),
        migrations.AlterModelOptions(
            name='workoutsession',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='workout',
            name='calories_estimate',
            field=models.IntegerField(blank=True, help_text='Estimativa de calorias queimadas', null=True),
        ),
        migrations.AddField(
            model_name='workout',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='workout',
            name='difficulty_level',
            field=models.CharField(blank=True, choices=[('beginner', 'Iniciante'), ('intermediate', 'Intermediário'), ('advanced', 'Avançado')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='workout',
            name='equipment_needed',
            field=models.CharField(blank=True, help_text='Equipamentos necessários', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='workout',
            name='estimated_duration',
            field=models.IntegerField(blank=True, help_text='Duração estimada em minutos', null=True),
        ),
        migrations.AddField(
            model_name='workout',
            name='is_recommended',
            field=models.BooleanField(default=False, help_text='Se este treino é recomendado pela IA'),
        ),
        migrations.AddField(
            model_name='workout',
            name='target_muscle_groups',
            field=models.CharField(blank=True, help_text='Grupos musculares alvo, separados por vírgula', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='workout',
            name='workout_type',
            field=models.CharField(blank=True, choices=[('strength', 'Força'), ('cardio', 'Cardio'), ('flexibility', 'Flexibilidade'), ('hiit', 'HIIT'), ('yoga', 'Yoga'), ('mixed', 'Misto')], max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='calories_burned',
            field=models.IntegerField(blank=True, help_text='Calorias queimadas (estimativa)', null=True),
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='duration_minutes',
            field=models.IntegerField(blank=True, help_text='Duração real da sessão', null=True),
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='notes',
            field=models.TextField(blank=True, help_text='Observações da sessão', null=True),
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='started_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='workoutsession',
            name='user_rating',
            field=models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Avaliação do usuário (1-5)', null=True),
        ),
        migrations.CreateModel(
            name='WorkoutExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sets', models.IntegerField(default=3, help_text='Número de séries')),
                ('reps', models.CharField(blank=True, help_text="Repetições (ex: '12', '10-15', 'até falha')", max_length=20, null=True)),
                ('weight', models.FloatField(blank=True, help_text='Peso em kg (opcional)', null=True)),
                ('rest_time', models.IntegerField(blank=True, help_text='Tempo de descanso em segundos', null=True)),
                ('order_in_workout', models.IntegerField(default=1, help_text='Ordem do exercício no treino')),
                ('notes', models.TextField(blank=True, help_text='Observações específicas', null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercises.exercise')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_exercises', to='workouts.workout')),
            ],
            options={
                'ordering': ['order_in_workout'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sets_completed', models.IntegerField(default=0)),
                ('reps_completed', models.CharField(blank=True, max_length=20, null=True)),
                ('weight_used', models.FloatField(blank=True, null=True)),
                ('rest_time_actual', models.IntegerField(blank=True, help_text='Tempo de descanso real em segundos', null=True)),
                ('completed', models.BooleanField(default=False)),
                ('skipped', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_logs', to='workouts.workoutsession')),
                ('workout_exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workouts.workoutexercise')),
            ],
            options={
                'ordering': ['workout_exercise__order_in_workout'],
            },
        ),
    ]
